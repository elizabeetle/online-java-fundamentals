package labs_examples.datastructures.linkedlist.labs;

import java.awt.image.AreaAveragingScaleFilter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

/**
 *      LinkedLists - Exercise_01
 *
 *      Demonstrate your mastery of Java's built-in LinkedList class by demonstrating the following:
 *
 *      1) create a LinkedList (from Java's libraries)
 *      2) add()
 *      3) addAll()
 *      4) addFirst()
 *      5) addLast()
 *      6) getFirst()
 *      7) getLast()
 *      8) get()
 *      9) set()
 *      10) push()
 *      11) pop()
 *      12) remove()
 *      13) contains()
 *      14) listIterator()
 *      15) clear()
 */

public class Exercise_01 {

    private static LinkedList<Integer> list = new LinkedList<>();

    public static void main(String[] args) {
        //2
        list.add(36502);

        //3
        ArrayList<Integer> autoGeneratedNums = new ArrayList<>();
        for(int i = 1; i < 1035; i++){
            autoGeneratedNums.add(i);
        }
        list.addAll(autoGeneratedNums);

        //4
        list.addFirst(1036);

        //5
        list.addLast(7);

        //6
        System.out.println(list.getFirst());

        //7
        System.out.println(list.getLast());

        //8
        System.out.println(list.get(87));

        //9
        System.out.println("Before change: " + list.get(27));

        //10
        list.set(27, 98);
        System.out.println("After change: " + list.get(27));

        //11
        System.out.println("Before pop: " + list.get(0));
        list.pop();
        System.out.println("After pop: " + list.get(0));

        //12
        list.remove(349);

        //13
        System.out.println("Does your linkedList contain the number 35? " + list.contains(35));
        if(list.contains(35) == true){
            System.out.println("The number 35 is at index: " + list.indexOf(35));
        }

        //14
        Iterator iterator = list.listIterator(1022);
        while(iterator.hasNext()){
            System.out.println(iterator.next());
        }
        System.out.println();


        //15
        list.clear();
        list.add(45);
        list.add(85);
        System.out.println(list);
        System.out.println(list.pop());

    }

}